{"version":3,"sources":["ui/contexts/contexts.ts","ui/NavigationMenuItem.tsx","ui/NavigationMenu.tsx","ui/VideoPreview.tsx","ui/pages/HomePage.tsx","ui/pages/SearchPage.tsx","ui/Settings.tsx","ui/Application.tsx","index.tsx"],"names":["ApplicationContext","React","undefined","NavigationMenuItem","props","page","icon","title","isSelected","applicationContext","useContext","onClick","open","className","NavigationMenu","pages","currentPage","map","VideoPreview","videoPreviewSettings","showChannelAvatar","showReleaseDate","showChannelName","HomePage","size","id","SearchPage","placeholder","Settings","updateVideoPreviewSettings","useState","isShowChannelAvatarChecked","setShowChannelAvatarChecked","isShowChannelNameChecked","setShowChannelNameChecked","isShowReleaseDateChecked","setShowReleaseDateChecked","useEffect","settings","Object","assign","checked","onChange","e","value","target","type","name","htmlFor","Pages","defaultVideoPreviewSettings","Application","setCurrentPage","isSidebarOpen","setSidebarOpen","setVideoPreviewSettings","context","closeSidebar","Provider","root","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.31f2ced5.chunk.js","sourcesContent":["import * as React from 'react'\nimport IApplicationContext from \"./IApplicationContext\"\n\nexport const ApplicationContext = React.createContext<IApplicationContext | undefined>(undefined)","import * as React from 'react'\n\nimport \"./NavigationMenuItem.css\"\nimport IPage from \"./IPage\"\nimport {useContext} from \"react\";\nimport {ApplicationContext} from \"./contexts/contexts\";\n\ninterface INavigationMenuItemProperties {\n    page: IPage\n    isSelected?: boolean\n}\n\nfunction NavigationMenuItem(props: INavigationMenuItemProperties) {\n    const {icon, title} = props.page\n    const isSelected = props.isSelected || false;\n\n    const applicationContext = useContext(ApplicationContext)\n\n    return (\n        <div\n            onClick={() => {\n                applicationContext!!.open(props.page)\n            }}\n            className={`navigation-menu-item ${isSelected ? 'selected' : ''}`}>\n            {icon}\n            <span className=\"title\">{title}</span>\n        </div>\n    )\n}\n\nexport default NavigationMenuItem","import * as React from 'react'\n\nimport {ApplicationContext} from \"./contexts/contexts\"\nimport {useContext} from \"react\"\nimport NavigationMenuItem from \"./NavigationMenuItem\"\n\nfunction NavigationMenu() {\n    const applicationContext = useContext(ApplicationContext)\n\n    const {pages, currentPage} = applicationContext!!\n\n    return (\n        <div className=\"navigation-menu\">\n            <nav className=\"general\">\n                {\n                    pages.map((page) => (\n                        <NavigationMenuItem\n                            page={page}\n                            isSelected={page === currentPage} />\n                    ))\n                }\n            </nav>\n        </div>\n    )\n}\n\nexport default NavigationMenu","import * as React from 'react'\nimport {ApplicationContext} from \"./contexts/contexts\"\nimport {useContext} from \"react\"\n\nimport './VideoPreview.css'\n\nfunction VideoPreview() {\n    const applicationContext = useContext(ApplicationContext)\n    const {showChannelAvatar, showReleaseDate, showChannelName} = applicationContext!!.videoPreviewSettings\n\n    return (\n        <section className=\"video-preview\">\n            <figure className=\"item thumbnail\" />\n            <div className=\"info\">\n                <div className=\"left\">\n                    { showChannelAvatar ? <figure className=\"avatar item\" /> : <></> }\n                </div>\n                <div className=\"right\">\n                    <figure className=\"title item text\" />\n                    { showChannelName ? <figure className=\"channel-name item text\" /> : <></> }\n                    <div className=\"stats\">\n                        { showReleaseDate ? <figure className=\"item text\" /> : <></> }\n                        <figure className=\"item text\" />\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default VideoPreview","import * as React from 'react'\nimport IPage from \"../IPage\"\nimport {IoMdHome} from \"react-icons/all\"\n\nimport './HomePage.css'\nimport VideoPreview from \"../VideoPreview\";\n\nfunction HomePage() {\n\n    return (\n        <div className=\"home-page\">\n            {\n                [0, 1, 2, 3, 4, 5].map(() => (\n                    <VideoPreview />\n                ))\n            }\n        </div>\n    )\n}\n\nconst page: IPage = {\n    icon: <IoMdHome size={24} />,\n    page: <HomePage />,\n    id: 'home',\n    title: 'Home'\n}\n\nexport default page","import * as React from 'react'\nimport {IoMdSearch} from \"react-icons/all\"\nimport IPage from \"../IPage\"\n\nimport './SearchPage.css'\n\nfunction SearchPage() {\n    return (\n        <div className=\"search-page\">\n            <input className=\"search\" placeholder=\"Search...\" />\n            <div>\n\n            </div>\n        </div>\n    )\n}\n\nconst page: IPage = {\n    icon: <IoMdSearch size={24} />,\n    id: \"search\",\n    page: <SearchPage />,\n    title: \"Search\"\n}\n\nexport default page","import * as React from 'react'\nimport {useContext, useEffect, useState} from \"react\"\nimport {ApplicationContext} from \"./contexts/contexts\"\n\nimport \"./Settings.css\"\n\nfunction Settings() {\n    const applicationContext = useContext(ApplicationContext)!!\n    const {videoPreviewSettings, updateVideoPreviewSettings} = applicationContext\n\n    const [isShowChannelAvatarChecked, setShowChannelAvatarChecked] = useState(videoPreviewSettings.showChannelAvatar)\n    const [isShowChannelNameChecked, setShowChannelNameChecked] = useState(videoPreviewSettings.showChannelName)\n    const [isShowReleaseDateChecked, setShowReleaseDateChecked] = useState(videoPreviewSettings.showReleaseDate)\n\n    useEffect(() => {\n        const settings = Object.assign({}, videoPreviewSettings)\n\n        settings.showReleaseDate = isShowReleaseDateChecked\n        settings.showChannelAvatar = isShowChannelAvatarChecked\n        settings.showChannelName = isShowChannelNameChecked\n\n        updateVideoPreviewSettings(settings)\n    }, [isShowReleaseDateChecked, isShowChannelAvatarChecked, isShowChannelNameChecked])\n\n    return (\n        <form className=\"settings\">\n            <h2 className=\"title\">Settings</h2>\n            <div className=\"checkbox\" id=\"enable-all-checkbox\">\n                <input\n                    checked={isShowChannelAvatarChecked && isShowChannelNameChecked && isShowReleaseDateChecked}\n                    onChange={(e) => {\n                        const value = e.target.checked\n\n                        setShowChannelNameChecked(value)\n                        setShowReleaseDateChecked(value)\n                        setShowChannelAvatarChecked(value)\n                    }}\n                    id=\"enable-all\"\n                    type=\"checkbox\"\n                    name=\"enableAll\" />\n                <label htmlFor=\"enable-all\">Enable all</label>\n            </div>\n            <div className=\"checkbox\">\n                <input\n                    checked={isShowChannelNameChecked}\n                    onChange={(e) => setShowChannelNameChecked(e.target.checked)}\n                    id=\"show-channel-name\"\n                    type=\"checkbox\"\n                    name=\"showChannelName\" />\n                <label htmlFor=\"show-channel-name\">Show channel name</label>\n            </div>\n            <div className=\"checkbox\">\n                <input\n                    checked={isShowReleaseDateChecked}\n                    onChange={(e) => setShowReleaseDateChecked(e.target.checked)}\n                    id=\"show-release-date\"\n                    type=\"checkbox\"\n                    name=\"showReleaseDate\" />\n                <label htmlFor=\"show-release-date\">Show release date</label>\n            </div>\n            <div className=\"checkbox\">\n                <input\n                    checked={isShowChannelAvatarChecked}\n                    onChange={(e) => setShowChannelAvatarChecked(e.target.checked)}\n                    id=\"show-channel-avatar\"\n                    type=\"checkbox\"\n                    name=\"showChannelAvatar\" />\n                <label htmlFor=\"show-channel-avatar\">Show channel avatar</label>\n            </div>\n        </form>\n    )\n}\n\nexport default Settings","import * as React from 'react'\nimport { IoMdMenu } from \"react-icons/all\"\n\nimport { ApplicationContext } from \"./contexts/contexts\"\n\nimport './Application.css'\nimport IApplicationContext from \"./contexts/IApplicationContext\"\nimport NavigationMenu from \"./NavigationMenu\"\nimport {useState} from \"react\"\nimport IPage from \"./IPage\"\n\nimport HomePage from './pages/HomePage'\nimport SearchPage from \"./pages/SearchPage\"\nimport IVideoPreviewSettings from \"./contexts/IVideoPreviewSettings\"\nimport Settings from \"./Settings\";\n\nconst Pages: Array<IPage> = [HomePage, SearchPage]\n\nconst defaultVideoPreviewSettings: IVideoPreviewSettings = {\n    showChannelAvatar: true,\n    showReleaseDate: true,\n    showChannelName: true\n}\n\nfunction Application() {\n    const [currentPage, setCurrentPage] = useState(Pages[0])\n    const [isSidebarOpen, setSidebarOpen] = useState(false)\n    const [videoPreviewSettings, setVideoPreviewSettings] = useState(defaultVideoPreviewSettings)\n\n    const context: IApplicationContext = {\n        pages: Pages,\n        open: function (page) {\n            setCurrentPage(page)\n            closeSidebar()\n        },\n        currentPage: currentPage,\n        videoPreviewSettings: videoPreviewSettings,\n        updateVideoPreviewSettings: setVideoPreviewSettings\n    }\n\n    function closeSidebar() {\n        setSidebarOpen(false)\n    }\n\n    return (\n        <ApplicationContext.Provider value={context}>\n            <div className=\"application\">\n                <header className=\"top-bar\">\n                    <button\n                        onClick={() => setSidebarOpen(!isSidebarOpen)}\n                        className=\"toggle-menu\">\n                        <IoMdMenu size={24} />\n                    </button>\n                    <h1 className=\"title\">ToTube</h1>\n                </header>\n                <div className=\"content\">\n                    <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n                        <NavigationMenu />\n                        <Settings />\n                    </div>\n                    <main className=\"page\">\n                        {currentPage.page}\n                    </main>\n\n                    { isSidebarOpen ? <div className=\"dim\" onClick={closeSidebar} /> : <></> }\n                </div>\n            </div>\n        </ApplicationContext.Provider>\n    )\n}\n\nexport default Application","import * as ReactDOM from 'react-dom'\nimport * as React from 'react'\n\nimport './index.css'\nimport Application from \"./ui/Application\";\n\nconst root = document.getElementById(\"root\") as HTMLElement\n\nReactDOM.render(\n    <Application />,\n    root\n)"],"sourceRoot":""}